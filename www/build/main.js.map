{"version":3,"sources":["../../src/providers/http/http.ts","../../src/pages/contact/contact.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/login/login.ts","../../src/pages/tabs/tabs.ts","../../src/pages/home/home.ts","../../src/database.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Http ,Headers,RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\n/*\n  Generated class for the HttpProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class HttpProvider {\n\n  url : string = 'http://localhost/app/controllers/usuarioControler.php';\n\n  constructor(public http: Http) {\n    \n  }\n\n  login($matricula,$password){\n    \n    let datos = {matricula: $matricula , password : $password};\n\n    return this.http\n    .post(this.url,JSON.stringify(datos))\n    .map(res => res.json(),\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/http/http.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the ContactPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-contact',\n  templateUrl: 'contact.html',\n})\nexport class ContactPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ContactPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 111\n// module chunks = 1","var map = {\n\t\"../pages/contact/contact.module\": [\n\t\t282,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 153;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 153\n// module chunks = 1","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { AlertController } from 'ionic-angular';\n\nimport { HttpProvider } from '../../providers/http/http';\nimport { TabsPage } from '../tabs/tabs';\nimport { Usuario } from '../../database';\n\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n\n  usuario : any;\n \n  constructor(public navCtrl: NavController, public http: HttpProvider, public alertCtrl: AlertController) {\n    this.usuario = {matricula: '', password: ''};\n  }\n\n  login($matricula,$password){\n\n    this.http.login($matricula,$password).subscribe( res => {\n      console.log('Resultado'+res);\n     \n      if(res != ''){\n        this.usuario = res;\n        Usuario.saveUsuarioLog(this.usuario);\n        this.navCtrl.setRoot(TabsPage);        \n      }else{\n        this.alerta();\n      }\n    },\n    error =>{\n      // console.log(\"eroooooooooooooooor\");\n      //console.log(error);\n      //alerta();\n    });\n  }\n\n  alerta(){\n    let alert = this.alertCtrl.create({\n      title: 'Datos erróneos',\n      subTitle: 'Por favor, inténtelo otra vez.',\n      buttons: ['OK']\n    });\n    alert.present();\n    this.usuario = null;\n  }\n\n  getUsuarioLogin(){\n    return this.usuario;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\n\n// import { AboutPage } from '../about/about';\nimport { ContactPage } from '../contact/contact';\nimport { HomePage } from '../home/home';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = HomePage;\n  tab2Root = ContactPage;\n  \n  // tab2Root = AboutPage;\n  // tab3Root = ContactPage;\n\n  constructor() {\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\nimport { HttpProvider } from '../../providers/http/http';\nimport { Usuario } from '../../database';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  usuarioLog;\n\n  constructor(public navCtrl: NavController, public http: HttpProvider) {\n    this.usuarioLog = Usuario.getUsuarioLog();\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import  Dexie  from 'dexie';\r\n\r\nexport class AppDB extends Dexie{\r\n\r\n    usuarioLog : Dexie.Table<IUsuario,number>;\r\n    usuarios : Dexie.Table<IUsuario,number>;\r\n    mensajes : Dexie.Table<IMensaje,number>;\r\n    \r\n    constructor(){\r\n        super(\"AppDB\");\r\n\r\n        this.version(1).stores({\r\n            usuarioLog  : 'id,nombre,primerApellido,segundoApellido,genero,email,telefono,accesos,ultimoAcceso,imagenNombre,imegenPath,matricula,password',\r\n            usuarios    : '++id,nombre,primerApellido,segundoApellido,genero,email,telefono,accesos,ultimoAcceso,imagenNombre,imegenPath,matricula,password',\r\n            mensajes    : '++id,contenido,status,usuarioEmisor,usuarioReceptor,fechaEnvio,fechaRecibido'\r\n        });\r\n\r\n        this.usuarios.mapToClass(Usuario);\r\n        this.mensajes.mapToClass(Mensaje);\r\n    }\r\n}\r\n\r\nexport class Usuario implements IUsuario{\r\n    id                   ?:number;\r\n    nombre                :string;\r\n    primerApellido        :string;\r\n    segundoApellido       :string;\r\n    genero                :string;\r\n    email                 :string;\r\n    telefono              :string;\r\n    accesos               :number;\r\n    ultimoAcceso          :string;\r\n    imagenNombre          :string;\r\n    imegenPath            :string;\r\n    matricula             :string;\r\n    password              :string;\r\n\r\n    constructor(\r\n        nombre                :string,\r\n        primerApellido        :string,\r\n        segundoApellido       :string,\r\n        genero                :string,\r\n        email                 :string,\r\n        telefono              :string,\r\n        matricula             :string,\r\n        password              :string,\r\n\r\n        accesos              ?:number,\r\n        ultimoAcceso         ?:string,\r\n        imagenNombre         ?:string,\r\n        imegenPath           ?:string,\r\n        id                   ?:number,\r\n        \r\n    ){\r\n        this.nombre             = nombre;\r\n        this.primerApellido     = primerApellido;\r\n        this.segundoApellido    = segundoApellido;\r\n        this.genero             = genero;\r\n        this.email              = email;\r\n        this.telefono           = telefono;\r\n        this.matricula          = matricula;\r\n        this.password           = password;\r\n\r\n        if(accesos) this.accesos            = accesos;\r\n        if(ultimoAcceso) this.ultimoAcceso  = ultimoAcceso ;  \r\n        if(imagenNombre) this.imagenNombre  = imagenNombre;\r\n        if(imegenPath) this.imegenPath      = imegenPath;        \r\n        if(id)  this.id                     = id;  \r\n    }\r\n\r\n    save(){\r\n        return db.usuarios.add(this);\r\n    }\r\n\r\n    static all(){\r\n        return db.usuarios.orderBy(\"id\").reverse().toArray();\r\n    }\r\n\r\n    static getUsuarioLog(){\r\n        return db.usuarioLog.toArray();\r\n    }\r\n    \r\n    static saveUsuarioLog(usuarioLog){\r\n        return db.usuarioLog.add(usuarioLog);        \r\n    }\r\n\r\n}\r\n\r\nexport class Mensaje implements IMensaje{\r\n    id                   ?:number;\r\n    contenido             :string;\r\n    status                :string;\r\n    usuarioEmisor         :number;\r\n    usuarioReceptor       :number;\r\n    fechaEnvio            :string;\r\n    fechaRecibido         :string;\r\n    conversacion          :number;\r\n\r\n    constructor(\r\n        contenido           :string,\r\n        status              :string,\r\n        usuarioEmisor       :number,\r\n        usuarioReceptor     :number,\r\n        fechaEnvio         ?:string,\r\n        fechaRecibido      ?:string,\r\n        conversacion       ?:number,\r\n        id                 ?:number\r\n    ){\r\n        this.contenido          = contenido;\r\n        this.status             = status;\r\n        this.usuarioEmisor      = usuarioEmisor;\r\n        this.usuarioReceptor    = usuarioReceptor;\r\n        \r\n        if(fechaEnvio) this.fechaEnvio          = fechaEnvio;\r\n        if(fechaRecibido) this.fechaRecibido    = fechaRecibido;\r\n        if(conversacion) this.conversacion      = conversacion;\r\n        if(id)  this.id                         = id;  \r\n    }\r\n\r\n    save(){\r\n        return db.mensajes.add(this);\r\n    }\r\n\r\n    static all(usuarioReceptor,usuarioEmisor){\r\n        return db.mensajes\r\n            .where('[usuarioReceptor+usuarioEmisor]').equals([usuarioReceptor,usuarioEmisor])\r\n            .or('[usuarioReceptor+usuarioEmisor]').equals([usuarioEmisor,usuarioReceptor])\r\n            .toArray();\r\n\r\n            //.where('usuarioReceptor').equals(usuarioReceptor)\r\n            //.where(\"[usuarioReceptor,usuarioEmisor]\").equals([usuarioReceptor,usuarioEmisor])\r\n            //.and(usuarioEmisor => mensajes.indexOf(mensaje.usuarioEmisor))\r\n    }\r\n\r\n}\r\n\r\nexport interface IUsuario{\r\n    id?                   :number;\r\n    nombre                :string;\r\n    primerApellido        :string;\r\n    segundoApellido       :string;\r\n    genero                :string;    \r\n    email                 :string;\r\n    telefono              :string;\r\n    accesos               :number;\r\n    ultimoAcceso          :string;\r\n    imagenNombre          :string;\r\n    imegenPath            :string;\r\n    matricula             :string;\r\n    password              :string;\r\n}\r\n\r\nexport interface IMensaje{\r\n    id?                   :number;\r\n    contenido             :string;\r\n    status                :string;\r\n    usuarioEmisor         :number;\r\n    usuarioReceptor       :number;\r\n    fechaEnvio            :string;\r\n    fechaRecibido         :string;\r\n    conversacion          :number;\r\n}\r\n\r\nexport interface IConversacion{\r\n    id?                   :number;\r\n    puerto                :number;\r\n    tipo                  :number;\r\n    fecha                 :string;\r\n    grupoId               :number;\r\n}\r\n\r\nexport interface IArchivo{\r\n    id?                   :number;\r\n    mensajeId             :number;\r\n    tipo                  :number;\r\n    nombre                :string;\r\n    path                  :string;\r\n}\r\n\r\n\r\nexport interface IGrupo{\r\n    id?                   :number;\r\n    pid                   :number;\r\n    nombre                :string;\r\n    cursoId               :number;\r\n}\r\n\r\n\r\n\r\nexport let db = new AppDB();\n\n\n// WEBPACK FOOTER //\n// ./src/database.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HttpProvider } from '../providers/http/http';\nimport { HttpModule } from '@angular/http';\n\n\nimport { HomePage } from '../pages/home/home';\nimport { ContactPage } from '../pages/contact/contact';\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { LoginPage } from '../pages/login/login';\n\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ContactPage,\n    LoginPage,\n    TabsPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ContactPage,\n    LoginPage,\n    TabsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    HttpProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { LoginPage } from '../pages/login/login';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = LoginPage;//HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}